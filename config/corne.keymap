/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include "keys_sl.h"
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        htL: htL {
            compatible = "zmk,behavior-hold-tap";
            label = "HTL";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39>;
            tapping-term-ms = <300>;
            flavor = "tap-unless-interrupted";
            hold-trigger-on-release;
        };
        htR: htR {
            compatible = "zmk,behavior-hold-tap";
            label = "HTR";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 38>;
            flavor = "tap-unless-interrupted";
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // |  ESC |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
  &kp TAB         &kp Q              &kp W            &kp E             &kp R      &kp T    &kp SL_Z            &kp U            &kp I              &kp O                  &kp P        &kp BSPC
  &kp ESC  &htL LCTRL A  &htL LEFT_SHIFT S  &htL LEFT_GUI D   &htL LEFT_ALT F      &kp G       &kp H  &htR LEFT_ALT J  &htR LEFT_GUI K  &htR LEFT_SHIFT L  &htR LCTRL SL_C_CARON  &kp SL_S_CARON
&kp LSHFT      &kp SL_Y              &kp X            &kp C  &htL RIGHT_ALT V      &kp B       &kp N      &htR RALT M        &kp COMMA            &kp DOT           &kp SL_MINUS  &kp SL_Z_CARON
                                                     &trans             &mo 1  &kp SPACE     &kp RET            &mo 2           &trans
            >;
        };

        lower {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans              &trans              &kp N7        &kp N8            &kp N9     &kp SL_SLASH      &kp HOME             &kp PAGE_DOWN       &kp PAGE_UP                      &kp END        &trans  &trans
&trans  &htL LCTRL SL_PLUS  &htL LEFT_SHIFT N4  &htL LGUI N5  &htL LEFT_ALT N6  &kp SL_ASTERISK      &kp LEFT  &htR LEFT_ALT DOWN_ARROW  &htR LEFT_GUI UP  &htR LEFT_SHIFT RIGHT_ARROW  &htR LCTRL 0  &trans
&trans              &kp N0              &kp N1        &kp N2      &htL RALT N3            &kp 0    &kp INSERT     &htR RIGHT_ALT DELETE            &trans                       &trans        &trans  &trans
                                                      &trans            &trans           &trans        &trans                     &mo 3            &trans
            >;

            label = "LWR";
        };

        raise {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp SL_QUESTION            &trans       &trans         &trans        &trans            &kp SL_GRAVE        &kp SL_LPAR         &kp SL_RPAR  &trans  &trans  &trans
&trans      &kp SL_EXCL  &kp SL_AMPERSAND  &kp SL_HASH  &kp SL_DOLLAR  &kp SL_EQUAL              &kp SL_SQT  &kp SL_LEFT_BRACE  &kp SL_RIGHT_BRACE  &trans  &trans  &trans
&trans           &trans            &trans       &trans         &trans        &trans    &kp SL_DOUBLE_QUOTES        &kp SL_LBKT   &kp RIGHT_BRACKET  &trans  &trans  &trans
                                                &trans          &mo 3        &trans                  &trans             &trans              &trans
            >;

            label = "RSE";
        };

        both {
            bindings = <
&rgb_ug RGB_COLOR_HSB(209,100,50)  &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_EFF    &trans  &kp C_VOLUME_DOWN   &kp C_VOLUME_UP  &kp K_MUTE  &kp C_BRIGHTNESS_INC  &bl BL_INC
                  &rgb_ug RGB_TOG  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFR    &trans     &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_BRIGHTNESS_DEC  &bl BL_DEC
                       &bt BT_CLR     &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4    &trans             &trans            &trans      &trans                &trans      &trans
                                                                              &trans            &mo 4           &trans    &trans              &mo 4            &trans
            >;

            label = "BTH";
        };

        fun {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "fun";
        };
    };
};
